% Project 5-2:任意給定平面上三點, 判斷外心是否在這三點所圍成的三角形內
% input:      在螢幕上用滑鼠點三個點
% output:     1.三角形 
%             2.點出外心
%             3.畫出外接圓
%             4.判斷外心是否在三角形內部
%             ##若三點共線或共點，則需重新輸入

axis([-30 30 -30 30]);   %設定座標邊界
axis equal;              

[X,Y]=ginput(3);         %讓使用者在螢幕上用滑鼠點三個點

if(X(1)==X(2) && Y(1)==Y(2) && X(3)==X(2) && Y(3)==Y(2) && X(1)==X(3) && Y(1)==Y(3))           %圖形點到重覆的點
    disp("點到重覆的點，不是三角形");
else
    if((X(1)==X(2) && Y(1)==Y(2)) || (X(3)==X(2) && Y(3)==Y(2)) || (X(1)==X(3) && Y(1)==Y(3)))  %圖形三點成一直線
        disp("三點成一直線，不是三角形");
    else
       
        p=[X(1) Y(1);X(2) Y(2);X(3) Y(3)]; %將三個點存入矩陣p
 
 
         %1.求垂直平分線
         
         center1=(p(1,:)+p(2,:))/2;                 %先算出中點
         center2=(p(2,:)+p(3,:))/2;
 
         k1=-1/((p(2,2)-p(1,2))/(p(2,1)-p(1,1)));   %求出斜率
         k2=-1/((p(3,2)-p(2,2))/(p(3,1)-p(2,1)));
 
         b1=center1(2)-k1*center1(1);               %用中點和斜率得到垂直平分線
         b2=center2(2)-k2*center2(1);
 
         %2.求交點
         
         x0=-(b1-b2)/(k1-k2);               %求兩直線交點
         y0=-(-b2*k1+b1*k2)/(k1-k2);
         
         %3.求出半徑
         
         r=sqrt((x0-p(1,1))^2+(y0-p(1,2))^2);
         disp(['外接圓半徑: ',num2str(r)]);


         hold on;                          %將圖保存
         
         %4.畫出三角形
         
         gx=[X;X(1)];
         gy=[Y;Y(1)];
         plot(gx,gy,'b');  

         %5.畫出外接圓 
         
         thea=0:0.01:2*pi;
         x=x0+r*cos(thea);
         y=y0+r*sin(thea);
         plot(x,y,'-',x0,y0,'b');
         
         %6.畫出外心 
         
         plot(x0,y0,'.');  

         %7.判斷外心是否在外接圓內部
         
         s=1/2*(abs(X(1)*Y(2)+X(2)*Y(3)+X(3)*Y(1)-X(2)*Y(1)-X(3)*Y(2)-X(1)*Y(3)));  %原三角形面積
         
         s1=1/2*(abs(x0*Y(2)+X(2)*Y(3)+X(3)*y0-X(2)*y0-X(3)*Y(2)-x0*Y(3)));
         s2=1/2*(abs(X(1)*y0+x0*Y(3)+X(3)*Y(1)-x0*Y(1)-X(3)*y0-X(1)*Y(3)));         %外心分別與三角形另外2點所圍成的面積
         s3=1/2*(abs(X(1)*Y(2)+X(2)*y0+x0*Y(1)-X(2)*Y(1)-x0*Y(2)-X(1)*y0));         
         
         ss=s1+s2+s3;   %將三個小三角形面積相加
         
         if((ss-s)<10^(-5))                  %比較三個小三角形面積和與原三角形面積，判斷是否在三角形內部
             disp("外心在三角形裏面");
         else
             disp("外心在三角形外面");
         end
    end
end





